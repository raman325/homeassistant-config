[
    {
        id: ifttt_vacuum_control
        alias: IFTTT Vacuum Control
        initial_state: true
        trigger:
        {
            platform: webhook
            webhook_id: !secret webhook_vacuum
        }
        action:
        {
            service: rest_command.ir_send
            data_template:
            {
                blaster: "{{ trigger.json.blaster }}"
                target: "{{ trigger.json.target }}"
                command: "{{ trigger.json.command }}"
            }
        }
    }
    {
        id: notify_updates
        alias: Update Available Notifications
        trigger:
        {
            platform: state
            entity_id: binary_sensor.updater
        }
        action:
        {
            service: notify.slack
            data:
            {
                message: New HA version {{ state_attr('binary_sensor.updater','newest_version') }} is available.{{ '\n' }}{{ '\n' }}{% if states("sensor.potential_breaking_changes")|int > 0 %}{{ states("sensor.potential_breaking_changes") }} possible breaking changes:{{ '\n' }}```{% for k, v in states.sensor.potential_breaking_changes.attributes.items() %}{% if k not in ["friendly_name", "icon"] %}{{ k }}:{{ v }}{{ '\n' }}{% endif %}{% endfor %}```{% else %}No breaking changes detected.{% endif %}{{ '\n' }}{{ '\n' }}Raw: ```{{ states.sensor.potential_breaking_changes.attributes }}```
            }
        }
    }
]
