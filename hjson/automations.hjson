[
    // {
    //     id: resume_icloud_updates
    //     alias: Resume iCloud Updates
    //     initial_state: true
    //     trigger:
    //     {
    //         platform: state
    //         entity_id: 
    //         [
    //             device_tracker.router_ramansiphone
    //             device_tracker.router_sherenesiphone
    //             device_tracker.monitor_ramansiphone
    //             device_tracker.monitor_sherenesiphone
    //         ]
    //         from: "home"
    //         to: "not_home"
    //     }
    //     action:
    //     {
    //         service: device_tracker.icloud_update
    //     }
    // }
    {
        id: ifttt_vacuum_control
        alias: IFTTT Vacuum Control
        initial_state: true
        trigger:
        {
            platform: webhook
            webhook_id: !secret webhook_vacuum
        }
        condition:
        {
            condition: template
            value_template: !secret webhook_auth_check
        }
        action:
        {
            service: rest_command.ir_send
            data_template:
            {
                blaster: "{{ trigger.json.blaster }}"
                target: "{{ trigger.json.target }}"
                command: "{{ trigger.json.command }}"
            }
        }
    }
    {
        id: ifttt_kodi_control
        alias: IFTTT Kodi Control
        initial_state: true
        trigger:
        {
            platform: webhook
            webhook_id: !secret webhook_ghkodi
        }
        condition:
        {
            condition: template
            value_template: !secret webhook_auth_check
        }
        action:
        {
            service: rest_command.kodi_send
            data_template:
            {
                token: "{{ trigger.json.token }}"
                kodiid: "{{ trigger.json.kodiid }}"
                phrase: "{{ trigger.json.phrase }}"
            }
        }
    }
    {
        id: notify_updates
        alias: Update Available Notifications
        trigger:
        {
            platform: state
            entity_id: sensor.available_ha_version
        }
        condition:
        {
            condition: template
            value_template: '{% set curr_ver = states("sensor.local_ha_version").split(".") %}{% set new_ver = states("sensor.available_ha_version").split(".") %}{{ new_ver[0]|int > curr_ver[0]|int or new_ver[1]|int > curr_ver[1]|int or (new_ver[0]|int == curr_ver[0]|int and new_ver[1]|int == curr_ver[1]|int and new_ver[2]|int > curr_ver[2]|int) }}'
        }
        action:
        {
            service: notify.apprise
            data:
            {
                title: 'New HA version {{ states("sensor.available_ha_version") }} available'
                message: 'https://www.home-assistant.io/latest-release-notes/ \n {% if states("sensor.potential_breaking_changes")|int > 0 %}{{ states("sensor.potential_breaking_changes") }} possible breaking changes:\n```{% for k, v in states.sensor.potential_breaking_changes.attributes.items() %}{% if k not in ["friendly_name", "icon"] %}{{ k }}:{{ v }}\n{% endif %}{% endfor %}```{% else %}No breaking changes detected.{% endif %}'
                target: all
            }
        }
    }
    {
        id: update_smartthings_raman_leave_home
        alias: Update SmartThings when Raman leaves home
        trigger:
        {
            entity_id: person.raman
            platform: state
            from: home
        }
        action:
        {
            service: mqtt.publish
            data:
            {
                payload: "not present"
                topic: "smartthings/ZZZ HA Raman/presence"
            }
        }
    }
    {
        id: update_smartthings_sherene_leave_home
        alias: Update SmartThings when Sherene leaves home
        trigger:
        {
            entity_id: person.sherene
            platform: state
            from: home
        }
        action:
        {
            service: mqtt.publish
            data:
            {
                payload: "not present"
                topic: "smartthings/ZZZ HA Sherene/presence"
            }
        }
    }
    {
        id: update_smartthings_raman_come_home
        alias: Update SmartThings when Raman comes home
        trigger:
        {
            entity_id: person.raman
            platform: state
            to: home
        }
        action:
        {
            service: mqtt.publish
            data:
            {
                payload: "present"
                topic: "smartthings/ZZZ HA Raman/presence"
            }
        }
    }
    {
        id: update_smartthings_sherene_come_home
        alias: Update SmartThings when Sherene comes home
        trigger:
        {
            entity_id: person.sherene
            platform: state
            to: home
        }
        action:
        {
            service: mqtt.publish
            data:
            {
                payload: "present"
                topic: "smartthings/ZZZ HA Sherene/presence"
            }
        }
    }
]
